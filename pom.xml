<?xml version="1.0" encoding="UTF-8"?><project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>	
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.4</version> <!-- 27/01/2024 - 2.7.18 -->
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	
	<groupId>io.odilon</groupId>
	<artifactId>odilon-server</artifactId>
	<version>1.5-beta</version>
	<name>odilon server</name>
	<description>Odilon is a scalable and lightweight Open Source Object Storage that runs on standard hardware.
	It is an infrastructure software to be used by applications that need to store 
	that needs to store terabytes of medium to large size objects (like photos or pdfs) securely and safely through encryption, replication and redundancy.
	A typical installation would by 100M pdfs 20KB-30MB each.
	It has a simple single-level folder structure similar to the Bucket / Object model of Amazon S3. 
	It is small and easy to integrate, offers encryption, data protection and fault tolerance (software RAID and Erasure Codes) and detection of silent data degradation. Odilon also supports version control 
	and master - standby replication over the Internet for disaster recovery and anti ransomware.</description>
	
	<properties>
		<java.version>17</java.version>
		<!-- caffeine-version>we used the one provided by Spring </caffeine-version -->	 							
		<commons-lang3-version>3.14.0</commons-lang3-version>	 						<!--  03/2024   -->
		<oswego-version>1.3.4</oswego-version>											<!--  01 /2024 -->
		<spring-vault-core>3.1.1</spring-vault-core> 									<!--  03/2024 - 2.1.5.RELEASE -->
		<odilon-version>1.5-beta</odilon-version>
	</properties>

	<repositories>
		<repository>
			<id>my-local-repo</id>
			<url>file://${basedir}/nonstandardlib/</url>
		</repository>

		<repository>
			<id>novamens-releases</id>		
			<url>https://maven.novamens.com/nexus/content/repositories/releases/</url>
		</repository>
	</repositories>

	<dependencies>
		
		<dependency>
			<groupId>io.odilon</groupId>
			<artifactId>odilon-model</artifactId>			
			<version>${odilon-version}</version> 
		</dependency>

		<dependency>
			<groupId>io.odilon</groupId>
			<artifactId>odilon-client</artifactId>			
			<version>${odilon-version}</version>
		</dependency>
		
	    <dependency>
	        <groupId>io.dropwizard.metrics</groupId>
	        <artifactId>metrics-core</artifactId>
	        <!--version>${metrics.version}</version-->
	    </dependency>

		<dependency>
		  <groupId>com.github.ben-manes.caffeine</groupId>
		  <artifactId>caffeine</artifactId>
		  <!-- version: we used the one provided by Spring --> 
		</dependency>
			


		<!--  Spring =====================================================================================  -->
	  
      <dependency>
				  <groupId>org.springframework.boot</groupId>
				  <artifactId>spring-boot-starter-web</artifactId>
				  <exclusions>
				    <!--exclusion>
				    
				    	Odilon 1.5+ uses Tomcat due to a problem with multipart upload with Jetty included in Spring 3.x
				    
				      <groupId>org.springframework.boot</groupId>
				      <artifactId>spring-boot-starter-tomcat</artifactId>
				    </exclusion -->
				   	<exclusion>
						<artifactId>commons-logging</artifactId>
						<groupId>commons-logging</groupId>
					</exclusion>
				  </exclusions>
		</dependency>

	   	<!--dependency>
			  <groupId>org.springframework.boot</groupId>
			  <artifactId>spring-boot-starter-jetty</artifactId>
		</ dependency-->
		
		 <!-- https://mvnrepository.com/artifact/org.eclipse.jetty.http2/http2-server -->
		<!-- dependency>
		    <groupId>org.eclipse.jetty.http2</groupId>
		    <artifactId>http2-server</artifactId>
		    <version>11.0.20</version>
		</dependency -->

		
		
		
      
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter</artifactId>
		    <exclusions>
		        <exclusion>
		            <groupId>org.springframework.boot</groupId>
		            <artifactId>spring-boot-starter-logging</artifactId>
		        </exclusion>
		    </exclusions>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.thymeleaf.extras</groupId>
			<artifactId>thymeleaf-extras-springsecurity6</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
		    <groupId>org.springframework.boot</groupId>
		    <artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
			
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.vault</groupId>
			<artifactId>spring-vault-core</artifactId>
			<version>${spring-vault-core}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!--  Client Java SDK =====================================================================================  -->

			<!-- dependency>
			    <groupId>org.apache.commons</groupId>
			    <artifactId>commons-lang3</artifactId>
			</ dependency -->

			<!-- https://mvnrepository.com/artifact/oswego-concurrent/concurrent -->
			<dependency>
			    <groupId>oswego</groupId>
			    <artifactId>concurrent</artifactId>
			    <version>${oswego-version}</version>
			    <!-- used by the Scheduler  -->
			</dependency>

			<dependency>
			    <groupId>org.junit.vintage</groupId>
			    <artifactId>junit-vintage-engine</artifactId>
			    <scope>test</scope>
			    <exclusions>
			        <exclusion>
			            <groupId>org.hamcrest</groupId>
			            <artifactId>hamcrest-core</artifactId>
			        </exclusion>
			    </exclusions>
			</dependency>
			
			
			 
		<!--  Client Java SDK  (end) =====================================================================================  -->

		<!-- Temporary explicit version to fix Thymeleaf bug -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
			    <artifactId>maven-jar-plugin</artifactId>
			    <configuration>
			        <excludes>
			             <exclude>./src/test/*</exclude>
			             <exclude>./src/main/resources/*</exclude>
			        </excludes>
			    </configuration>
			</plugin>
		</plugins>
	</build>

</project>
